{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\claes\\\\Documents\\\\GitHub\\\\js-frameworks-react\\\\day-1-end\\\\day-1-start-claes\\\\norofftestproject\\\\src\\\\components\\\\Paragraph.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Paragraph() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Heisann jeg er setning 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Heisann jeg er setning 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Heisann jeg er setning 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In React, capitalization is not just a best practice, but it is a requirement for certain elements to be properly recognized and rendered. In JSX (which is a syntax extension for JavaScript used by React), lowercase tag names are assumed to be HTML elements, while capitalized names are assumed to be custom React components. For example, the following code snippet would create a custom React component:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"As you can see, the prop Text is capitalized, which is a requirement in React. So in summary, capitalization in React is not just a best practice, but it is necessary for certain elements and props to be properly recognized and rendered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n_c = Paragraph;\nexport default Paragraph;\nvar _c;\n$RefreshReg$(_c, \"Paragraph\");","map":{"version":3,"names":["Paragraph","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/claes/Documents/GitHub/js-frameworks-react/day-1-end/day-1-start-claes/norofftestproject/src/components/Paragraph.js"],"sourcesContent":["function Paragraph() {\r\n  return (\r\n    <div>\r\n      <p>Heisann jeg er setning 1</p>\r\n      <p>Heisann jeg er setning 2</p>\r\n      <p>Heisann jeg er setning 3</p>\r\n      <p>\r\n        In React, capitalization is not just a best practice, but it is a\r\n        requirement for certain elements to be properly recognized and rendered.\r\n        In JSX (which is a syntax extension for JavaScript used by React),\r\n        lowercase tag names are assumed to be HTML elements, while capitalized\r\n        names are assumed to be custom React components. For example, the\r\n        following code snippet would create a custom React component:\r\n      </p>\r\n      <p>\r\n        As you can see, the prop Text is capitalized, which is a requirement in\r\n        React. So in summary, capitalization in React is not just a best\r\n        practice, but it is necessary for certain elements and props to be\r\n        properly recognized and rendered.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paragraph;\r\n"],"mappings":";;AAAA,SAASA,SAASA,CAAA,EAAG;EACnB,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC/BL,OAAA;MAAAC,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC/BL,OAAA;MAAAC,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC/BL,OAAA;MAAAC,QAAA,EAAG;IAOH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJL,OAAA;MAAAC,QAAA,EAAG;IAKH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV;AAACC,EAAA,GAtBQP,SAAS;AAwBlB,eAAeA,SAAS;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}